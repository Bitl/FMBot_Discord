// <auto-generated />
using System;
using FMBot.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FMBot.Data.Migrations
{
    [DbContext(typeof(FMBotDbContext))]
    [Migration("20200315161237_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FMBot.Data.Entities.Friend", b =>
                {
                    b.Property<int>("FriendID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("FriendUserID")
                        .HasColumnType("integer");

                    b.Property<string>("LastFMUserName")
                        .HasColumnType("text");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("FriendID")
                        .HasName("PK_dbo.Friends");

                    b.HasIndex("FriendUserID")
                        .HasName("IX_FriendUserID");

                    b.HasIndex("UserID")
                        .HasName("IX_UserID");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("FMBot.Data.Entities.Guild", b =>
                {
                    b.Property<int>("GuildID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("Blacklisted")
                        .HasColumnType("boolean");

                    b.Property<int>("ChartTimePeriod")
                        .HasColumnType("integer");

                    b.Property<int>("ChartType")
                        .HasColumnType("integer");

                    b.Property<string>("DiscordGuildID")
                        .HasColumnType("text");

                    b.Property<string>("EmoteReactions")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool?>("TitlesEnabled")
                        .HasColumnType("boolean");

                    b.HasKey("GuildID")
                        .HasName("PK_dbo.Guilds");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("FMBot.Data.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("Blacklisted")
                        .HasColumnType("boolean");

                    b.Property<int>("ChartTimePeriod")
                        .HasColumnType("integer");

                    b.Property<int>("ChartType")
                        .HasColumnType("integer");

                    b.Property<string>("DiscordUserID")
                        .HasColumnType("text");

                    b.Property<bool?>("Featured")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastGeneratedChartDateTimeUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("TitlesEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserNameLastFM")
                        .HasColumnType("text");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.HasKey("UserID")
                        .HasName("PK_dbo.Users");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FMBot.Data.Entities.Friend", b =>
                {
                    b.HasOne("FMBot.Data.Entities.User", "FriendUser")
                        .WithMany("FriendsFriendUser")
                        .HasForeignKey("FriendUserID")
                        .HasConstraintName("FK_dbo.Friends_dbo.Users_FriendUserID");

                    b.HasOne("FMBot.Data.Entities.User", "User")
                        .WithMany("FriendsUser")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK_dbo.Friends_dbo.Users_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
